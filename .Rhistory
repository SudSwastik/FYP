2+3
install.packages("ggplot2")
x<-4
y<-9
dat<-data.frame(x,y)
dat
libraby(ggplot2)
library(ggplot2)
ggplot()+geom_point(data=dat,aes(x=x,y=y),size=5,color="blue")
install.packages("UsingR")
print("hello world")
print("sud'hi")
print("sud'hi'")
print("sud"hi"")
?print
help.search()
help.search(vector)
help.search("vector")
demo(persp)
install.packages(KernSmooth)
install.packages("KernSmooth")
library(KernSmooth)
library(KernSmooth)
x=23
y=x^2
z=y^3+x^2
z=y^3+x^2
x=23
y=x^2
z=y^3+x^2
z
2+3-4*6/3-2^3/4+7-6*2**3/2+2-4+5
-478/365-12^3/47-6**2**3-27^-(1/3)-7^6*3
c(1,2,3,4)*c(1,2,2,4)^c(2,1,3,2)**c(1,2,3,3)-c(2,3,402653185,262145)
c(2,3,4,5)^c(2,3)+c(12,23,14,25)^c(3,2)-c(5,6,7,8)*c(2,3)
c(2,3,4,5)^c(2,3,4)-c(12,23,14,15)^c(2,3,4,5)+c(2340,3440,48760,539870)+c(2,3,4,5)^c(2,3,4,5)
abs(c(5,6,7,8)*c(-1,-2,-3,-4)- c(5,6,7,8)*c(-2,3)- c(1,2,4,4)^-c(1,2,-1,-2))
c(1,2,4,4)^-c(1,2,-1,-2)* c(1,2,4,4)^-c(1,2,-1,-2)
c(15,16,17,18)%/%8*c(52,64,71,86)%/%c(4,3)+c(53,66,87,78)%%7
max(c(62,83,44,75)^-c(9,-3))/min(c(52,62,71,85)^c(2,3))-prod(c(1,2,1,2)^c(1,2))+max(c(12,13,14,15)^c(2,3))
prod(c(1,2,1,2)^c(1,2))+sum(c(1,2,1,2)^c(2,3))-prod(c(1,2,1,2)^c(1,2,3,7))-ceiling(c(5,6,7,8)^c(2,3))
ceiling(c(5,6,7,8)^c(2,3))+floor(c(5,6,7,8)^c(2,3))+floor(c(2,3,4,5)^-c(1,-2))-round(c(5,6,7,8)^c(2,3))
round(c(21,23,44,15)^c(-11,-12)+sqrt(c(35,16,37,88)^c(12,3))*sqrt(c(21,13,14,45)^-c(1,-2)))
round(sum(c(12,13,871,789))- prod(c(21,22,13,14,51)))
X1 <- c(123,258,318,624)
X2 <- sqrt(X1^3)+X1/X1^2-X1**(1/2)
X2
c(11,12,34,24)^-c(2,2,-1,-2)*c(1,2,3,4)-c(12,14,11,16)%/%c(4,3)+min(c(120,14,14,15)^c(1,3))+max(c(56,12,71,15)^c(2,3))
?print
help.start()
help.search()
start.help()
search.help()
help.start()
demo(persp)
y<- function(7590){sqrt(log(7590)+7590^(1/3))}
y <- function(7590){
sqrt(log(7590)+7590^(1/3))
}
z=function(x,y){sqrt(x^2+y^2)+exp(-(x^-2+y^-2))-
(x^2+y^2)^(2/4)}
z(12,14)
x
x <- mat(1:9,3,3,byrow=F)
x=matrix(1:9,3,3,byrow=F)
x
z <- matrix(nrow=2, ncol=3, data=c(5,6,7,8,9,10), byrow=T)
z
x <-123
y=if ( x==33 ) { x <- x^2 } else { x <- x^3 }
y
x <- 1
if ( x >= 0 ) { y <- 2 * x^2 } else (x > 0) { y <- 3 * x^3 - sqrt(x^5) }
x <- 1
if ( x <= 0 ) ( y < 2 * x^2 + abs(x - 6)  ) else (x > 0) ( y < 3 * x^3 )
x <- 1
if ( x <= 0 ) ( y <- 2 * x^2 + abs(x - 6) ) else ( y <- 3 * x^3 - sqrt(x^5))
y
x <- 1
if ( x <= 0 ) { y <- 2 * x^2 + abs(x - 6) } else { y <- 3 * x^3 - sqrt(x^5 }
y
x = c(2,4,6,8,10)
ifelse(x<6,2*x,10*x)
for(i in 2:4) {print(1 + 2i)}
for(i in 20:24){print(i+2*i)}
z <- 3
while (z < 15) {
print(c("R Course","is helpful."))
z = z + 2
print(c("R Course","is not helpful."))
z = z + 1
}
x <- 10
while(x < 50) {x <- x+10; if (x == 40) break; print(x^2);}
seq(from=2,to=4)
seq(from=4,to=2)
seq(from=-4,to=4)
seq(-4,+4)
seq(10,16,2)
seq(3,-2,-0.5)
seq(to=10,length=10)
seq(from=10,length=10)
seq(from=10,length=10,by=0.1)
x<-2
seq(1,x,x/10)
x<-50
seq(0,x,x/10)
abs(seq(-2,2))
sqrt(abs(seq(-6,6, by = 3)))
seq(18,-18,by=-5)
seq(to = 100, length = 8)
seq(to = -20, length = 10)
seq(to = 22, length = 5, by = 6)
seq(from = -10, length = 5, by = -0.3)
Y <- c(90, 77, 51, 20, 30, 60, 89)
X <- seq(along = Y)
X
seq(1:10)
seq(10)
Y[X[2]]
Y <- c(900, 717, 251, 280, 302, 670, 897)
X <- seq(along = Y)
Y[X[2]]
Y[X[6]]
Sys.Date()
Sys.time()
seq(as.Date("2010-01-01"),as.Date("2017-01-01"),by="years")
seq(as.Date("2010-01-01"),by="days")
seq(as.Date("2010-01-01"),by="days",length=6)
out<-seq(enddate,startdate,by="-1 month")
startdate<-as.Date("2016-1-1")
enddate<-as.Date("201-1-1")
out
out<-seq(enddate,startdate,by="-1 month")
startdate<-as.Date("2016-1-1")
enddate<-as.Date("2017-1-1")
out<-seq(enddate,startdate,by="-1 month")
out
seq(as.Date("2015-01-01"), as.Date("2017-01-01"), by = "years")
seq(as.Date("2017-01-05"), by = "months", length = 9)
LETTERS[18:12]
letter[1:3]
letters[1:3]
letters[5:9:2]
letters[5:10:2]
letters[5:10]
rep(3,5,times=10)
rep(1:4,2)
rep(2:6,5)
x=1:3
x
rep(x,times=3)
rep(x,each=3)
rep(1:4,each=2times=3)
rep(1:4,each=2,times=3)
rep(1:4,2:5)
ans<-seq(from=2,to=8,by=2)
ans
rep(1:4,ans)
x<-matrix(nrow=2,ncol=2,data=1:4,byrow=T)
x
rep(x,3)
rep(c("a","b","c"),2)
rep(2:5,4)
rep(70:65, times=3)
rep(20:25, each=3)
x <- matrix(nrow=2, ncol=2, data=1:4, byrow=T)
rep(x, each=3)
rep(c("name1", "name2", "name3"), each=2)
x[(x%%2==1)]
x <- 1:10
x[(x>5)]
x[(x%%2==0)]
x[(x%%2==1)]
x<-10:20
x
x[5]=NA
x
y<-x[!is.na(x)]
y
mean(x)
mean(y)
x<=1:10
x<-1:10
x
x[-(1:5)]
x
x[6:10]
z<-list(a1=1,a2="c",a3=1:3)
z
names(z)
names(z)[3]<-"c2"
z
x<-c(water=1,juice=2,lemonade=3)
names(x)
x["juice"]
x
z<-list(1,2,3,"x","y","z")
dim(z)<-c(2,3)
print(z)
dim(z)<-c(3,2)
print(z)
z <- list(x1  = "name1", x2 = 10:15)
names(z)
names(z)[2]<-"y2"
names(z)
z["x2"]
z["x2"]
z <- list(x1  = "name1", x2 = 10:15)
names(z)
z["x2"]
factor(c(1,1,2,2,3,3))
data = c(1,1,2,2,3,3)
factor(data)
levels(data) = c('I','II','III')
data
x=factor(c(1,2,2,5,1,2,1,5),levels=c(1,2,5),ordered=TRUE)
x
factor( c(rep("male",2), rep("female", 3)))
unclass(factor(c("lemonade","juice","water","juice","lemonade"),levels=c("juice","lemonade","water")))
as.factor(c(1, 2, 2, 3, 3, 3))
z <- list(x1  = "name1", x2 = 10:15)
names(z)
z["x2"]
names(z)[2]<-"y2"
names(z)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
x<-list(a=matrix(1:4,2,2),b=matrix(1:6,2,3))
x
lapply(x,function(a) a[,1])
lapply(x,function(a) a[1,])
sapply(x,mean)
y=strsplit("Solution of problem 20-Solution of problem 30-Solution of problem 40","-")
y
y=strsplit("Student A gets 20 marks- Student B gets 30 marks- Student C gets 40 marks","-")
y[[1]][2]
nchar("Was Czechoslovakia or Czecho-Slovakia  a sovereign state in Central Europe ?")
sub("25", "30", "R Course will start from 25 July" )
gsub("R Course", "S-plus Course", "R Course - 25 July. R Course - 30 July")
tolower("R CoURse")
toupper("R CourSES")
grep("ab", c("abc", "def", "cbaba", "adaba"))
grep("[a-d]", letters)
eval(344+465-697-1660+2898-1278)
eval("344+465-697-1660+2898-1278")
set.seed(1)
rpois(5, 2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
g <- ggplot(data.frame(column = average), aes(x = column))+
geom_histogram(aes(y = ..density..),binwidth = 0.2,fill='blue',color= 'black')+
stat_function(fun = dnorm, args = list(mean = lambda^-1,sd=  (lambda*sqrt(nexp))^-1),size=2)+
labs(title = "Distribution of Exponentials", x = "Simulation Means", y ="Density")
knitr::opts_chunk$set(echo = TRUE)
set.seed(143)
lambda <- 0.2
nexp <- 40
average <- NULL
for(i in 1:1000)
average <- c(average, mean(rexp(nexp, lambda)))
lambda ^ -1
mean(average)
(lambda * sqrt(nexp)) ^ -2
var(average)
library(ggplot2)
g <- ggplot(data.frame(column = average), aes(x = column))
g <- g + geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = 'blue', color = 'black')
g <- g + stat_function(fun = dnorm, args = list(mean = lambda^-1, sd=(lambda*sqrt(nexp))^-1), size=2)
g <- g + labs(title = "Distribution of Exponentials", x = "Simulation Means", y = "Density")
g
knitr::opts_chunk$set(echo = TRUE)
set.seed(143)
lambda <- 0.2
exponentials = 40
simMeans = NULL
for (i in 1 : 1000) simMeans = c(simMeans, mean(rexp(exponentials, lambda)))
lambda ^ -1
mean(simMeans)
(lambda * sqrt(exponentials))^-2
var(simMeans)
library(ggplot2)
ggplot(data.frame(y=simMeans), aes(x=y)) +
geom_histogram(aes(y=..density..), binwidth=0.2, fill="#0072B2",
color="black") +
stat_function(fun=dnorm, arg=list(mean=lambda^-1,
sd=(lambda*sqrt(exponentials))^-1),
size=2) +
labs(title="Plot of the Simulations", x="Simulation Mean")
knitr::opts_chunk$set(echo = TRUE)
set.seed(143)
lambda <- 0.2
nexp <- 40
average <- NULL
for(i in 1:1000)
average <- c(average, mean(rexp(nexp, lambda)))
lambda ^ -1
mean(average)
(lambda * sqrt(nexp)) ^ -2
var(average)
library(ggplot2)
g <- ggplot(data.frame(column = average), aes(x = column))
g <- g + geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = 'blue', color = 'black')
g <- g + stat_function(fun = dnorm, args = list(mean = lambda^-1, sd=(lambda*sqrt(nexp))^-1), size=2)
g <- g + labs(title = "Distribution of Exponentials", x = "Simulation Means", y = "Density")
g
knitr::opts_chunk$set(echo = TRUE)
set.seed(143)
lambda <- 0.2
nexp <- 40
average <- NULL
for(i in 1:1000)
average <- c(average, mean(rexp(nexp, lambda)))
lambda ^ -1
mean(average)
(lambda * sqrt(nexp)) ^ -2
var(average)
library(ggplot2)
g <- ggplot(data.frame(column = average), aes(x = column))
+ geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = 'red', color = 'black')
knitr::opts_chunk$set(echo = TRUE)
set.seed(143)
lambda <- 0.2
nexp <- 40
average <- NULL
for(i in 1:1000)
average <- c(average, mean(rexp(nexp, lambda)))
lambda ^ -1
mean(average)
(lambda * sqrt(nexp)) ^ -2
var(average)
library(ggplot2)
g <- ggplot(data.frame(column = average), aes(x = column))
g <- g + geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = 'red', color = 'black')
g <- g + stat_function(fun = dnorm, args = list(mean = lambda^-1, sd=(lambda*sqrt(nexp))^-1), size=2)
g <- g + labs(title = "Distribution of Exponentials", x = "Simulation Means", y = "Density")
g
knitr::opts_chunk$set(echo = TRUE)
library(datasets)
library(ggplot2)
str(ToothGrowth)
summary(ToothGrowth)
data <- ToothGrowth
levels(data$supp) <- c("Orange Juice", "Ascorbic Acid")
g <- ggplot(data, aes(x = factor(dose), y = len))
g <- g + facet_grid(.~supp)
g <- g + geom_boxplot(aes(fill = supp))
g <- g + labs(title = "Tooth Length by Dosage for Every Supplement")
g <- g + labs(x = "Dose (mg/day)", y = "Tooth Length")
print(g)
h0.5 <- t.test(len ~ supp, data = subset(data, dose == 0.5))
h0.5$conf.int
h0.5$p.value
h1 <- t.test(len ~ supp, data = subset(data, dose == 1))
h1$conf.int
h1$p.value
h2 <- t.test(len ~ supp, data = subset(data, dose == 2))
h2$conf.int
h2$p.value
knitr::opts_chunk$set(echo = TRUE)
library(datasets)
library(ggplot2)
str(ToothGrowth)
summary(ToothGrowth)
data <- ToothGrowth
levels(data$supp) <- c("Orange Juice", "Ascorbic Acid")
g <- ggplot(data, aes(x = factor(dose), y = len))
g <- g + facet_grid(.~supp)
g <- g + geom_boxplot(aes(fill = supp))
g <- g + labs(title = "Tooth Length by Dosage for Every Supplement")
g <- g + labs(x = "Dose (mg/day)", y = "Tooth Length")
print(g)
h0.5 <- t.test(len ~ supp, data = subset(data, dose == 0.5))
h0.5$conf.int
h0.5$p.value
h1 <- t.test(len ~ supp, data = subset(data, dose == 1))
h1$conf.int
h1$p.value
h2 <- t.test(len ~ supp, data = subset(data, dose == 2))
h2$conf.int
h2$p.value
knitr::opts_chunk$set(echo = TRUE)
set.seed(143)
lambda <- 0.2
nexp <- 40
average <- NULL
for(i in 1:1000)
average <- c(average, mean(rexp(nexp, lambda)))
lambda ^ -1
mean(average)
(lambda * sqrt(nexp)) ^ -2
var(average)
library(ggplot2)
g <- ggplot(data.frame(column = average), aes(x = column))
g <- g + geom_histogram(aes(y = ..density..), binwidth = 0.2, fill = 'red', color = 'black')
g <- g + stat_function(fun = dnorm, args = list(mean = lambda^-1, sd=(lambda*sqrt(nexp))^-1), size=2)
g <- g + labs(title = "Distribution of Exponentials", x = "Simulation Means", y = "Density")
g
knitr::opts_chunk$set(echo = TRUE)
library(datasets)
library(ggplot2)
str(ToothGrowth)
summary(ToothGrowth)
data <- ToothGrowth
levels(data$supp) <- c("Orange Juice", "Ascorbic Acid")
g <- ggplot(data, aes(x = factor(dose), y = len))
g <- g + facet_grid(.~supp)
g <- g + geom_boxplot(aes(fill = supp))
g <- g + labs(title = "Tooth Length by Dosage for Every Supplement")
g <- g + labs(x = "Dose (mg/day)", y = "Tooth Length")
print(g)
h0.5 <- t.test(len ~ supp, data = subset(data, dose == 0.5))
h0.5$conf.int
h0.5$p.value
h1 <- t.test(len ~ supp, data = subset(data, dose == 1))
h1$conf.int
h1$p.value
h2 <- t.test(len ~ supp, data = subset(data, dose == 2))
h2$conf.int
h2$p.value
knitr::opts_chunk$set(echo = TRUE)
set.seed(143)
lambda <- 0.2
nexp <- 40
average <- NULL
for(i in 1:1000)
average <- c(average, mean(rexp(nexp, lambda)))
lambda ^ -1
mean(average)
(lambda * sqrt(nexp)) ^ -2
var(average)
ggplot(data = data,aes(means))+geom_histogram(fill ='lightgrey', color ='black'
, bins = 20)+
geom_vline(xintercept =mean(data$means), size =1.5, color ='#0033cc')+
geom_vline(xintercept = 1/0.2, size =1.5, color ='black', linetype = 2)+
ggtitle('Mean of simulated means vs. theoretical mean')
knitr::opts_chunk$set(echo = TRUE)
set.seed(143)
lambda <- 0.2
nexp <- 40
average <- NULL
for(i in 1:1000)
average <- c(average, mean(rexp(nexp, lambda)))
lambda ^ -1
mean(average)
(lambda * sqrt(nexp)) ^ -2
var(average)
ggplot(data = average,aes(means))+geom_histogram(fill ='lightgrey', color ='black'
, bins = 20)+
geom_vline(xintercept =mean(average$means), size =1.5, color ='#0033cc')+
geom_vline(xintercept = 1/0.2, size =1.5, color ='black', linetype = 2)+
ggtitle('Mean of simulated means vs. theoretical mean')
library("ggplot2", lib.loc="~/R/win-library/3.4")
detach("package:ggplot2", unload=TRUE)
library(readr)
knitr::opts_chunk$set(echo = TRUE)
summary(cars)
plot(pressure)
setwd("C:/Users/sudarshan/FYP")
library("dplyr")
dataFilePath <- "C:/Users/sudarshan/FYP/Data/CryptocoinsHistoricalPrices.csv"
data <- read.csv(dataFilePath)
head(data)
bitcoinData <- filter(data,coin=="BTC")
head(bitcoinData)
write.csv(bitcoinData,file="dataFilePath/bitcoinData.csv")
write.csv(bitcoinData,file="C:/Users/sudarshan/FYP/Data/bitcoinData.csv")
write.csv(bitcoinData,file="C:/Users/sudarshan/FYP/Data/bitcoinData.csv")
df_uniq<- unique(data$coin)
length(df_uniq)
